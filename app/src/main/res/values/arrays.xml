<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string-array name="modules_title">
        <item>Barcode Scanner</item>
        <item>Face Tracker</item>
        <item>Googly Eyes</item>
        <item>Giant Emoji</item>
        <item>Accelerometer Play</item>
        <item>Our Streets</item>
        <item>Material Design Codelab</item>
        <item>Text to speech</item>
        <item>AI Experiments</item>
        <item>Halloween Doodle</item>
    </string-array>
    <string-array name="modules_category">
        <item>component</item>
        <item>component</item>
        <item>component</item>
        <item>component</item>
        <item>game;component</item>
        <item>design</item>
        <item>design</item>
        <item>component</item>
        <item>game</item>
        <item>game</item>
    </string-array>
    <string-array name="modules_desc">
        <item>
            The Barcode Scanner API detects barcodes in real time in any orientation.
            You can also detect and parse several barcodes in different formats at the same time.
        </item>
        <item>
            The Face API finds human faces in photos, videos, or live streams.
            It also finds and tracks positions of facial landmarks such as the eyes, nose, and mouth.
            The API also provides information about the state of facial features are the subject\'s
            eyes open? Are they smiling? With these technologies, you can edit photos and video,
            enhance video feeds with effects and decorations, create hands-free controls for games
            and apps, or react when a person winks or smiles.
        </item>
        <item>
            An app that uses the camera to track faces and superimpose Googly Eyes animated graphics
            over the eyes. The app also detects whether the eyes are open or closed, drawing the
            eyes in the correct state.
        </item>
        <item>
            Giant Emoji is an experimental openFrameworks application that translates your facial
            expressions into a giant emoji. It was created over a three week sprint and debuted at
            Google I/O 2016. We thought it might be fun for an attendee to turn their face into an emoji.
            So, we set out to figure out how to make that happen. This is the result.
        </item>
        <item>
            This sample demonstrates how to use an accelerometer sensor as input for a physics-based
            view. The input from the accelerometer is used to simulate a virtual surface, and a
            number of free-moving objects placed on top of it. Any effects from the device\'s
            acceleration vector (including both gravity and temporary movement) will be translated
            to the on-screen particles.
        </item>
        <item>
            With OurStreets you can experience beautiful views from around the world in 360 degrees.
            All of this with a delightful material design approach throughout the whole interface.
            OurStreets demonstrates use of shared element transitions throughout the app.
            The data for OurStreets is stored in Firebase and retrieved at runtime.
            This allows for a smaller initial download as well as modifying of data without having
            to deploy a new apk.
        </item>
        <item>
            Android Design Support library has been released and samples are coming up all over the place.
            This sample is bringing Material Design implementation using Android Design Support Library.
        </item>
        <item>
            Text-To-Speech (TTS). Also known as "speech synthesis", enables your Android device
            to "speak" text of different languages.
        </item>
        <item>
            Explore machine learning by playing with pictures, language, music, code, and more.
        </item>
        <item>
            Grab your wand and help fend off a ghostly catastrophe. Press play to swipe spells,
            save your friends, and help restore the peace at the Magic Cat Academy.
        </item>
    </string-array>
    <string-array name="modules_link">
        <item>https://developers.google.com/vision</item>
        <item>https://developers.google.com/vision"</item>
        <item>https://developers.google.com/vision"</item>
        <item>https://github.com/googlecreativelab/giantemoji</item>
        <item>https://github.com/googlesamples/android-AccelerometerPlay"</item>
        <item>https://github.com/googlesamples/android-OurStreets"</item>
        <item>https://github.com/googlecodelabs/android-design-library"</item>
        <item>https://goo.gl/aDs0bM</item>
        <item>https://aiexperiments.withgoogle.com"</item>
        <item>https://www.google.com/doodles/halloween-2016"</item>
    </string-array>
    <string-array name="modules_picture">
        <item>@drawable/barcode_scanner</item>
        <item>@drawable/face_tracker</item>
        <item>@drawable/googly_eyes</item>
        <item>@drawable/giant_emoji</item>
        <item>@drawable/accelerometer_play</item>
        <item>@drawable/out_streets</item>
        <item>@drawable/material_design</item>
        <item>@drawable/tts</item>
        <item />
        <item>@drawable/halloween_doodle</item>
    </string-array>
    <string-array name="modules_action">
        <item>barcode</item>
        <item>face</item>
        <item>googly</item>
        <item>gmoji</item>
        <item>accelerometer</item>
        <item>ourStreets</item>
        <item>materialDesign</item>
        <item>tts</item>
        <item>aiExperiments</item>
        <item>halloweenDoodle</item>
    </string-array>
</resources>